version: "3.8"
services:
  postgres_db:
    image: postgres:16
    ports:
      - "5432:5432"
    container_name: postgres_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d shipment" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    environment:
      POSTGRES_DB: shipment
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    command: [
      "postgres",
      "-c", "wal_level=logical",
      "-c", "max_wal_senders=20",
      "-c", "max_replication_slots=20"
    ]
    secrets:
      - db_password
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ../scripts/sql:/docker-entrypoint-initdb.d:ro

  debezium:
    image: sylwiakubicz/debezium_connect_v2.6_apicurio_v2.5.10:1.0.0
    container_name: debezium
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      GROUP_ID: "connect-cluster-1"
      CONFIG_STORAGE_TOPIC: "connect-configs"
      OFFSET_STORAGE_TOPIC: "connect-offsets"
      STATUS_STORAGE_TOPIC: "connect-status"

      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "io.apicurio.registry.utils.converter.AvroConverter"

      CONNECT_VALUE_CONVERTER_APICURIO_REGISTRY_URL: "http://apicurio:8080/apis/registry/v2"

      CONNECT_VALUE_CONVERTER_APICURIO_REGISTRY_ARTIFACT_STRATEGY: "io.apicurio.registry.utils.serde.strategy.TopicRecordIdStrategy"
      CONNECT_VALUE_CONVERTER_APICURIO_REGISTRY_ARTIFACT_GROUP_ID: "shipment"
      CONNECT_VALUE_CONVERTER_APICURIO_REGISTRY_USE_HEADERS: "true"
    depends_on:
      postgres_db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -fsS localhost:8083/connectors || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 15s

  apicurio:
    image: apicurio/apicurio-registry-mem:2.5.10.Final
    container_name: apicurio
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/apis/registry/v2/ids/globalIds/1 || true"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  pgdata:

secrets:
  db_password:
    file: ../../secrets/postgres_password.txt

networks:
  default:
    external: true
    name: parcelhub_network